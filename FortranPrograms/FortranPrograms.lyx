#LyX file created by tex2lyx 2.0.1
\lyxformat 345
\begin_document
\begin_header
\textclass report
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize 12
\spacing single
\use_hyperref 1
\pdf_bookmarks 1
\pdf_bookmarksnumbered 0
\pdf_bookmarksopen 0
\pdf_bookmarksopenlevel 1
\pdf_breaklinks 0
\pdf_pdfborder 0
\pdf_colorlinks 0
\pdf_backref section
\pdf_pdfusetitle 1
\papersize default
\use_geometry false
\use_amsmath 2
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Chapter

Fortran Programs
\end_layout

\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%  Section
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Section

Example Programs
\end_layout

\begin_layout Standard

To do parallel programming using OpenMP or MPI (Message passing interface), we typically need to use a lower level language than Matlab such as Fortran. Another possible choice of language is C, however Fortran has superior array handling capabilities compared to C, and has a similar syntax to Matlab, so is typically easier to use for scientific computations which make heavy use of regular arrays. It is therefore useful to introduce a few simple programs in Fortran before we begin studying how to create parallel programs. A good recent reference on Fortran is Metcalf, Reid and Cohen
\begin_inset space ~

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
after ""
key "MetReiCoh11"

\end_inset

. We recognize that most people will be unfamiliar with Fortran and probably more familiar with Matlab
\begin_inset Foot
status collapsed


\begin_layout Standard

Although Matlab is written in C, it was originally written in Fortran and so has a similar style to Fortran.
\end_layout

\end_inset

, C or C++, but we expect that the example codes will make it easy for anyone with some introductory programming background. A recent guide which describes how to write efficient parallel Fortran code is Levesque and Wagenbreth
\begin_inset CommandInset citation
LatexCommand cite
after ""
key "LevWag11"

\end_inset

. Our programs are written to be run on the Flux cluster at the University of Michigan. More information on this cluster can be found at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://cac.engin.umich.edu/resources/systems/flux/
\end_layout

\end_inset

 and at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://cac.engin.umich.edu/started/index.html
\end_layout

\end_inset

. Below are four files you will need to run this.
\end_layout

\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

1)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 A makefile to compile the Fortran code on Flux in listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:MakefileHeat"

\end_inset

. This should be saved as 
\shape italic
makefile
\family default
\series default
\shape default
. Before using the makefile to compile the code, you will need to type
\begin_inset Newline newline
\end_inset

 
\family typewriter
module load fftw/3.2.1-intel
\family default

\begin_inset Newline newline
\end_inset

 at the command line prompt once logged into Flux. Then place the makefile and heat.f90 in the same directory, the example files below assume this directory is
\begin_inset Newline newline
\end_inset

 
\family typewriter
$
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

HOME
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

/ParallelMethods/Heat
\family default

\begin_inset Newline newline
\end_inset

 and type
\begin_inset Newline newline
\end_inset

 
\family typewriter
make
\family default

\begin_inset Newline newline
\end_inset

 to compile the file. Once the file is compiled type
\begin_inset Newline newline
\end_inset

 
\family typewriter
qsub fluxsubscript
\family default

\begin_inset Newline newline
\end_inset

 to get the cluster to run your program and then output the results. The programs that follow use the library FFTW to do the fast Fourier Transforms. More information on this library can be found at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://www.fftw.org/
\end_layout

\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting
\end_layout

\end_inset

[style=makestyle,language=make,label=lst:MakefileHeat,caption=
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

An example makefile for compiling a Fourier spectral Fortran heat equation program.
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

]
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

./FortranPrograms/Programs/FortranHeatEquation/makefile
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

2)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 The Fortran program in listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:FortranHeat"

\end_inset

 -- this should be saved as 
\shape italic
heat.f90
\family default
\series default
\shape default
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting
\end_layout

\end_inset

[style=fortranstyle,language=Fortran,label=lst:FortranHeat,caption=
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

A Fortran Fourier spectral program to solve the heat equation using backward Euler timestepping.
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

]
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

./FortranPrograms/Programs/FortranHeatEquation/heat.f90
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

3
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

) An example submission script to use on the cluster in Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:Fluxsubheat"

\end_inset

 -- this should be saved as 
\shape italic
fluxsubscript
\family default
\series default
\shape default
. More examples can be found at 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://cac.engin.umich.edu/resources/software/pbs.html
\end_layout

\end_inset

. To use it, please change the email address from 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

youruniqname@umich.edu
\end_layout

\end_inset

 to an email address at which you can receive notifications of when jobs start and are finished.
\end_layout

\begin_deeper
\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting
\end_layout

\end_inset

[style=bashstyle,language=bash,label=lst:Fluxsubheat,caption=
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

An example submission script for use on Flux.
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

]
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

./FortranPrograms/Programs/FortranHeatEquation/fluxsubscript
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

4)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 A Matlab plotting script
\begin_inset Foot
status collapsed


\begin_layout Standard

For many computational problems, one can visualize the results with 10-100 times less computational power than was needed to generate the results, so for problems which are not too large, it is much easier to use a high level language like Matlab to post process the data.
\end_layout

\end_inset

 to generate Fig.
\begin_inset space \space{}

\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:FortranHeat"

\end_inset

 is in listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lst:PlotMatlab"

\end_inset

 -- the Matlab file should be saved as plot.m
\end_layout

\begin_deeper
\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting
\end_layout

\end_inset

[style=matlabstyle,label=lst:PlotMatlab,caption=
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

A Matlab program to plot the computed results.
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset

]
\begin_inset ERT
status collapsed

\begin_layout Standard

{
\end_layout

\end_inset

./FortranPrograms/Programs/FortranHeatEquation/plotcreate.m
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard


\begin_inset Float figure
wide false
sideways false
status open


\begin_layout Standard
\align center


\begin_inset Graphics 
	filename heatPlot.jpg
	scale 35

\end_inset

 
\begin_inset Caption


\begin_layout Standard

The solution to the heat equation computed by Fortran and post processed by Matlab.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center


\begin_inset CommandInset label
LatexCommand label
name "fig:FortranHeat"

\end_inset

 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%  Section
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard

%%%%%%%
\end_layout

\begin_layout Standard


\end_layout

\end_inset


\end_layout

\begin_layout Section

Exercises
\end_layout

\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

1)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Please read the resources on the web page 
\begin_inset Flex Flex:URL
status collapsed

\begin_layout Plain Layout

http://cac.engin.umich.edu/started/index.html
\end_layout

\end_inset

 to learn how to use the Flux cluster. 
\end_layout

\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

2)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Modify the Fortran program for the 1-D heat equation to solve the Allen-Cahn equation, with your choice of time stepping scheme. Create a plot of the output of your run. Include the source code and plot in your solutions. 
\end_layout

\begin_layout Enumerate


\begin_inset ERT
status collapsed

\begin_layout Standard

[
\end_layout

\end_inset

3)
\begin_inset ERT
status collapsed

\begin_layout Standard

]
\end_layout

\end_inset

 Modify the Fortran program for the 1-D heat equation to solve the 2-D heat equation with your choice of time stepping scheme. Your program should save the field at each time step rather than putting all the fields in a single large array. Create a plot of the initial and final states of your run. Include the source code and plots in your solutions. 
\end_layout

\end_body
\end_document
